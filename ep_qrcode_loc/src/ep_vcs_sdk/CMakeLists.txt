cmake_minimum_required (VERSION 3.5)

set(PROJECT_NAME "ep_vcs_sdk")
project(${PROJECT_NAME} CXX)

set (PROJECT_VERSION_MAJOR 1)
set (PROJECT_VERSION_MINOR 0)
set (PROJECT_VERSION_PATCH 2)
set(PROJECT_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}")


execute_process(COMMAND date +%Y%m%d%H%M%S OUTPUT_VARIABLE COMPILE_DATE OUTPUT_STRIP_TRAILING_WHITESPACE)
set(PROJECT_VERSION_EXTRA ${COMPILE_DATE})
message("EP_VCS_SDK_VERSION_EXTRA=${PROJECT_VERSION_EXTRA}")
message("EP_VCS_SDK_VERSION= ${PROJECT_VERSION}")
ADD_DEFINITIONS(-DEP_VCS_SDK_VERSION="${PROJECT_VERSION}")

#创建CPP基础库
include_directories(BEFORE ${CMAKE_CURRENT_SOURCE_DIR})
aux_source_directory_dir(${CMAKE_CURRENT_SOURCE_DIR} EP_VCS_SDK_SRC )
add_library(${PROJECT_NAME} SHARED ${EP_VCS_SDK_SRC})

# 设置共享库的版本号，生成链接文件
set_target_properties(${PROJECT_NAME} PROPERTIES  VERSION ${PROJECT_VERSION} SOVERSION ${PROJECT_VERSION_MAJOR})

find_package(EPCppc  MODULE)
find_package(Httplib  MODULE)

if (WIN32 OR MSVC)
set_property(TARGET ${PROJECT_NAME} APPEND PROPERTY LINK_FLAGS "/NODEFAULTLIB:MSVCRT ")
endif()

# 安装
include(${CMAKE_HOME_DIRECTORY}/cmake/cmake_shared_install.cmake)